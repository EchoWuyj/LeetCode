package alg_02_体系班_zcy.class10;

/**
 * @Author Wuyj
 * @DateTime 2022-09-25 21:33
 * @Version 1.0
 */
public class Code02_Notes_BinaryTree {

    // 结论
    // 1)X是二叉树中某个节点
    // 2)已知该树的先序遍历: A..X..B
    // 3)已知该树的后序遍历: C..X..D
    //   则:A∩D => 得到的节点仅是X的祖先节点

    // 证明该结论
    // 1.证明:X的祖先节点一定是出现在A∩D的交集中
    //    1)先序遍历(根左右),X的祖先节点一定是出现在X以左
    //    2)后序遍历(左右根),X的祖先节点一定是出现在X以右
    //    => X的祖先节点一定是出现在A∩D的交集中
    // 2.再证明:A∩D的交集中只有祖先节点
    //   1)X的孩子节点一定不在A∩D的交集中
    //     因为先序遍历中,先遍历X,再去遍历X的孩子,所以X的所有孩子一定出现在X以右
    //   2)剩下的节点大体可以分成两类
    //     a.X作为左数姿态的右兄弟
    //     b.X作为右数姿态的左兄弟
    //
    //           a
    //         ↙
    //       b
    //         ↘
    //           c
    //          ↙
    //       d
    //         ↘
    //           X
    //
    //     a.X作为左树姿态的右兄弟
    //         先序遍历,这些右兄弟节点都是在X以右,所以A∩D一定不包含所有的右兄弟节点
    //     b.X作为右树姿态的左兄弟
    //         后序遍历,这些左兄弟节点都是在X以左,所以A∩D一定不包含所有的左兄弟节点
    //     => A∩D的交集中只有祖先节点
}
