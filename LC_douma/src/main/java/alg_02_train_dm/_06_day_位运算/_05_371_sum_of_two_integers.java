package alg_02_train_dm._06_day_位运算;

/**
 * @Author Wuyj
 * @DateTime 2023-04-21 23:27
 * @Version 1.0
 */
public class _05_371_sum_of_two_integers {

    /*
        371. 两整数之和
        给你两个整数 a 和 b ，不使用 运算符 + 和 - ，计算并返回两整数之和。

        示例 1：
        输入：a = 1, b = 2
        输出：3

        示例 2：
        输入：a = 2, b = 3
        输出：5

        提示：-1000 <= a, b <= 1000
     */

    // 位运算代替 + 和 -
    public int getSum(int a, int b) {
        // 二进制加法
        // a = 5  0101
        // b = 4  0100
        // -------------
        //        1001

        // 通过'异或'实现'无进位二进制加法'
        //   a = 5  0101
        // ^ b = 4  0100
        //----------------
        //          0001

        // 通过'与'实现'二进制加法的进位'
        //   a = 5  0101
        // & b = 4  0100
        //----------------
        //          0100 => 只有都为 1，相与结果才是 1
        // << 1     1000 => 进位结果

        //   0001
        // ^ 1000  => 异或：即无进位二进制加法
        //-------------
        //   1001

        // KeyPoint 结论： a + b = a 和 b 的无进位结果 + a 和 b 的进位结果

        // b == 0 即没有进位，直接 return a 即可
        while (b != 0) {
            // 进位
            int carry = (a & b) << 1;
            // 无进位加法
            a = a ^ b;
            b = carry;
        }
        return a;
    }
}
