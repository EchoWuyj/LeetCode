package alg_02_train_dm._11_day_优先队列;

/**
 * @Author Wuyj
 * @DateTime 2023-04-28 21:34
 * @Version 1.0
 */
public class _00_01_Note {
    /*
        堆和优先队列，两者是同一个东西
        堆是底层结构
        优先队列属于队列，一般可以使用堆实现

        堆(二叉堆)

        大顶堆
        1.二叉堆是一棵完全二叉树
        2.堆中每个节点的值总是不大于其父亲节点的值
                   66
                 ↙  ↘
               44      46

        小顶堆
        1.二叉堆是一棵完全二叉树
        2.堆中每个节点的值总是不小于其父亲节点的值
                    6
                 ↙  ↘
               12      25

        堆存储
        二叉堆 => 完全二叉树 => 数组存储(节约空间)
        leftChild(index) = index * 2 + 1
        rightChild(index) = index * 2 + 2
        parent(index) = (index-1) / 2


        堆操作
        1.查询堆顶 => 数组第一元素 => O(1) => 堆一般用于只需要查询最大/最小值的场景
        2.添加新元素 => 数组最后一个元素上浮过程 => Sift up => O(logn) (完全二叉树)
        3.删除堆顶元素 => 将数组最后一个元素推到堆顶上，为了维护堆性质，元素不断下沉
          => siftDown => O(logn) (完全二叉树)
        4.Heapify(堆化) => 将数组转成堆 => O(n)

        删除堆顶元素 => 不断排序过程




     */
}
